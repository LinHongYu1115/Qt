#include <SDL.h>
#include <SDL_mixer.h>
#include <iostream>
#include <string>
#include <unordered_map>

class SoundManager {
public:
    SoundManager() {
        if (SDL_Init(SDL_INIT_AUDIO) < 0) {
            std::cerr << "Failed to initialize SDL: " << SDL_GetError() << std::endl;
            initialized = false;
            return;
        }

        if (Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 2048) < 0) {
            std::cerr << "Failed to initialize SDL_mixer: " << Mix_GetError() << std::endl;
            initialized = false;
            return;
        }

        initialized = true;
    }

    ~SoundManager() {
        for (auto& [key, sound] : sounds) {
            Mix_FreeChunk(sound);
        }
        Mix_CloseAudio();
        SDL_Quit();
    }

    bool loadSound(const std::string& soundName, const std::string& filePath) {
        if (!initialized) return false;

        Mix_Chunk* sound = Mix_LoadWAV(filePath.c_str());
        if (!sound) {
            std::cerr << "Failed to load sound " << filePath << ": " << Mix_GetError() << std::endl;
            return false;
        }
        sounds[soundName] = sound;
        return true;
    }

    void playSound(const std::string& soundName, int loops = 0) {
        if (!initialized) return;

        auto it = sounds.find(soundName);
        if (it != sounds.end()) {
            Mix_PlayChannel(-1, it->second, loops);
        } else {
            std::cerr << "Sound " << soundName << " not found!" << std::endl;
        }
    }

    void stopAllSounds() {
        if (!initialized) return;
        Mix_HaltChannel(-1);
    }

private:
    bool initialized = false;
    std::unordered_map<std::string, Mix_Chunk*> sounds;
};

int main() {
    SoundManager soundManager;

    // 載入音效
    if (!soundManager.loadSound("testSound", "test.wav")) {
        std::cerr << "Error loading sound!" << std::endl;
        return 1;
    }

    // 播放音效
    soundManager.playSound("testSound", 0);

    // 等待音效播放完成
    SDL_Delay(2000);

    // 停止所有音效
    soundManager.stopAllSounds();

    return 0;
}
